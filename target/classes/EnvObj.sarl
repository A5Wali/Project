/** 
 * 
 */
package drone

import java.io.Serializable
import javax.vecmath.Point3f
import javax.vecmath.Vector3f

/** 
 * @author Alexandre
 * 
 */
class EnvObj implements Serializable {
	private var position : Point3f
	
	new(){
		this.position = new Point3f
	}
	
	new(pos : Point3f){
		this.position = pos
	}
	
	def setPosition(pos : Point3f){
		this.position = pos
	}
	
	def getPosition():Point3f{
		this.position
	}
	
	def computeForces(body : DroneBody, target : Sphere, droneToTargetVector : Vector3f, distanceDroneToTarget : float,
		currentSpeed : float) : Vector3f {
		
	}

	def getPerpendicularVector(original : Vector3f) : Vector3f {
		var C : Vector3f
		if (original.y != 0 || original.z != 0)
			C = new Vector3f(1, 0, 0)
		else
			C = new Vector3f(0, 1, 0)
		var B : Vector3f = new Vector3f()
		B.cross(original, C)
		B
	}
}
