/** 
 * 
 */
package drone

import javax.vecmath.Point3f
import javax.vecmath.Vector3f

/** 
 * @author Alexandre
 * 
 */
class DroneBody extends Cube{
	private var currentSpeed : Vector3f
	private var maxSpeed : Vector3f
	private var maxAcc : Vector3f
	var breakZone : float
	var stopZone : float 
	var protectingSphere : float
	val tMax : float // maximum anticipation time before collision
	
	new(){
		super()
		this.currentSpeed = new Vector3f()
		this.maxAcc = new Vector3f()
		this.maxSpeed = new Vector3f()
		this.tMax = 10
		this.breakZone = 5
		this.stopZone = 1
		this.protectingSphere = 10
	}
	
	new(pos : Point3f, w : float, maxS : Vector3f, maxA : Vector3f, tMax : float, bZ : float, sZ : float, pS : float) {
		super(pos, w)
		this.currentSpeed = new Vector3f()
		this.maxSpeed = maxS
		this.maxAcc = maxA
		this.tMax = tMax
		this.breakZone = bZ
		this.stopZone = sZ
		this.protectingSphere = pS
	}

	def setCurrentSpeed(cS : Vector3f){
		this.currentSpeed = cS
	}
	
	def getCurrentSpeed : Vector3f {
		this.currentSpeed
	}
	
	def getMaxSpeed : Vector3f {
		this.maxSpeed
	}
	
	def getMaxAcc : Vector3f {
		this.maxAcc
	}
	
	def getTMax : float {
		this.tMax
	}
	
	def getBreakZone : float {
		this.breakZone
	}
	 
	def getStopZone : float {
		this.stopZone
	}
	
	def getProtectingSphere : float {
		this.protectingSphere
	}
}
